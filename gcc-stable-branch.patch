gccadmin (3):
      Daily bump.
      Daily bump.
      Daily bump.

ian (1):
      Backport from trunk:

marxin (1):
      Backport r270899

meissner (4):
      setup branch
      Delete unintentional file from the wrong branch
      Delete unintentional file from the wrong branch
      Delete file created on the wrong branch

mpolacek (1):
      PR c++/90265 - ICE with generic lambda. 	* pt.c (tsubst_copy_and_build): Use a dedicated variable for the last 	element in the vector.

paolo (1):
      /cp 2019-05-06  Paolo Carlini  <paolo.carlini@oracle.com>

rguenth (1):
      2019-05-03  Richard Biener  <rguenther@suse.de>

diff --git a/ChangeLog b/ChangeLog
index a90e9c6d2fd..b6204ce56bd 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,3 +1,7 @@
+2019-05-04  Michael Meissner  <meissner@linux.ibm.com>
+
+	* ChangeLog.ibm: Delete unintentional commit on the wrong branch.
+
 2019-05-03  Release Manager
 
 	* GCC 9.1.0 released.
diff --git a/gcc/ChangeLog b/gcc/ChangeLog
index e9a3fa34129..b1659d3cb12 100644
--- a/gcc/ChangeLog
+++ b/gcc/ChangeLog
@@ -1,3 +1,23 @@
+2019-05-06  Martin Liska  <mliska@suse.cz>
+
+	Backport from mainline
+	2019-05-06  Martin Liska  <mliska@suse.cz>
+
+	PR sanitizer/90312
+	* config/i386/i386-options.c (ix86_option_override_internal): Error only
+	when -mabi is selected to a non-default version.
+
+2019-05-04  Michael Meissner  <meissner@linux.ibm.com>
+
+	* ChangeLog.ibm: Delete unintentional commit on the wrong branch.
+	* REVISION: Likewise.
+
+2019-05-03  Richard Biener  <rguenther@suse.de>
+
+	PR tree-optimization/90316
+	* tree-ssa-pre.c (pass_pre::execute): Re-compute DOM fast queries
+	before running VN.
+
 2019-05-03  Jakub Jelinek  <jakub@redhat.com>
 
 	* BASE-VER: Set to 9.1.1.
diff --git a/gcc/c/ChangeLog b/gcc/c/ChangeLog
index a1e1381641b..74ea868c861 100644
--- a/gcc/c/ChangeLog
+++ b/gcc/c/ChangeLog
@@ -1,3 +1,7 @@
+2019-05-04  Michael Meissner  <meissner@linux.ibm.com>
+
+	* ChangeLog.ibm: Delete unintentional commit on the wrong branch.
+
 2019-05-03  Release Manager
 
 	* GCC 9.1.0 released.
diff --git a/gcc/config/i386/i386.c b/gcc/config/i386/i386.c
index 8a1ffd3769f..5b946e1a32f 100644
--- a/gcc/config/i386/i386.c
+++ b/gcc/config/i386/i386.c
@@ -3705,12 +3705,17 @@ ix86_option_override_internal (bool main_args_p,
     error ("%<-mabi=ms%> not supported with X32 ABI");
   gcc_assert (opts->x_ix86_abi == SYSV_ABI || opts->x_ix86_abi == MS_ABI);
 
-  if ((opts->x_flag_sanitize & SANITIZE_USER_ADDRESS) && opts->x_ix86_abi == MS_ABI)
-    error ("%<-mabi=ms%> not supported with %<-fsanitize=address%>");
-  if ((opts->x_flag_sanitize & SANITIZE_KERNEL_ADDRESS) && opts->x_ix86_abi == MS_ABI)
-    error ("%<-mabi=ms%> not supported with %<-fsanitize=kernel-address%>");
-  if ((opts->x_flag_sanitize & SANITIZE_THREAD) && opts->x_ix86_abi == MS_ABI)
-    error ("%<-mabi=ms%> not supported with %<-fsanitize=thread%>");
+  const char *abi_name = opts->x_ix86_abi == MS_ABI ? "ms" : "sysv";
+  if ((opts->x_flag_sanitize & SANITIZE_USER_ADDRESS)
+      && opts->x_ix86_abi != DEFAULT_ABI)
+    error ("%<-mabi=%s%> not supported with %<-fsanitize=address%>", abi_name);
+  if ((opts->x_flag_sanitize & SANITIZE_KERNEL_ADDRESS)
+      && opts->x_ix86_abi != DEFAULT_ABI)
+    error ("%<-mabi=%s%> not supported with %<-fsanitize=kernel-address%>",
+	   abi_name);
+  if ((opts->x_flag_sanitize & SANITIZE_THREAD)
+      && opts->x_ix86_abi != DEFAULT_ABI)
+    error ("%<-mabi=%s%> not supported with %<-fsanitize=thread%>", abi_name);
 
   /* For targets using ms ABI enable ms-extensions, if not
      explicit turned off.  For non-ms ABI we turn off this
diff --git a/gcc/cp/ChangeLog b/gcc/cp/ChangeLog
index ad050bfad8c..a2dc643862f 100644
--- a/gcc/cp/ChangeLog
+++ b/gcc/cp/ChangeLog
@@ -1,3 +1,20 @@
+2019-05-06  Marek Polacek  <polacek@redhat.com>
+
+	PR c++/90265 - ICE with generic lambda.
+	* pt.c (tsubst_copy_and_build): Use a dedicated variable for the last
+	element in the vector.
+
+2019-05-06  Paolo Carlini  <paolo.carlini@oracle.com>
+
+	PR c++/90173
+	* decl.c (grokdeclarator): Set type to error_mark_node
+	upon error about template placeholder type non followed
+	by a simple declarator-id.
+
+2019-05-04  Michael Meissner  <meissner@linux.ibm.com>
+
+	* ChangeLog.ibm: Delete unintentional commit on the wrong branch.
+
 2019-05-03  Release Manager
 
 	* GCC 9.1.0 released.
diff --git a/gcc/cp/decl.c b/gcc/cp/decl.c
index 01c89cd572d..b57ded813b6 100644
--- a/gcc/cp/decl.c
+++ b/gcc/cp/decl.c
@@ -10973,6 +10973,7 @@ grokdeclarator (const cp_declarator *declarator,
       error_at (typespec_loc, "template placeholder type %qT must be followed "
 		"by a simple declarator-id", type);
       inform (DECL_SOURCE_LOCATION (tmpl), "%qD declared here", tmpl);
+      type = error_mark_node;
     }
 
   staticp = 0;
diff --git a/gcc/cp/pt.c b/gcc/cp/pt.c
index e682b6d51be..f316644d430 100644
--- a/gcc/cp/pt.c
+++ b/gcc/cp/pt.c
@@ -18881,7 +18881,8 @@ tsubst_copy_and_build (tree t,
 	    if (thisarg)
 	      {
 		/* Shift the other args over to make room.  */
-		vec_safe_push (call_args, (*call_args)[nargs-1]);
+		tree last = (*call_args)[nargs - 1];
+		vec_safe_push (call_args, last);
 		for (int i = nargs-1; i > 0; --i)
 		  (*call_args)[i] = (*call_args)[i-1];
 		(*call_args)[0] = thisarg;
diff --git a/gcc/testsuite/ChangeLog b/gcc/testsuite/ChangeLog
index a6c571a5959..17828a3a0ad 100644
--- a/gcc/testsuite/ChangeLog
+++ b/gcc/testsuite/ChangeLog
@@ -1,3 +1,27 @@
+2019-05-06  Marek Polacek  <polacek@redhat.com>
+
+	PR c++/90265 - ICE with generic lambda.
+	* g++.dg/cpp1y/lambda-generic-90265.C: New test.
+
+2019-05-06  Paolo Carlini  <paolo.carlini@oracle.com>
+
+	PR c++/90173
+	* g++.dg/cpp1z/class-deduction66.C: New.
+
+2019-05-06  Martin Liska  <mliska@suse.cz>
+
+	Backport from mainline
+	2019-05-06  Martin Liska  <mliska@suse.cz>
+
+	PR sanitizer/90312
+	* gcc.dg/asan/pr87930.c: Run the test only on *linux or *gnu
+	systems.
+	* gcc.dg/tsan/pr88017.c: Likewise.
+
+2019-05-04  Michael Meissner  <meissner@linux.ibm.com>
+
+	* ChangeLog.ibm: Delete unintentional commit on the wrong branch.
+
 2019-05-03  Release Manager
 
 	* GCC 9.1.0 released.
diff --git a/gcc/testsuite/g++.dg/cpp1y/lambda-generic-90265.C b/gcc/testsuite/g++.dg/cpp1y/lambda-generic-90265.C
new file mode 100644
index 00000000000..d9ab9b7f55f
--- /dev/null
+++ b/gcc/testsuite/g++.dg/cpp1y/lambda-generic-90265.C
@@ -0,0 +1,4 @@
+// PR c++/90265
+// { dg-do compile { target c++14 } }
+
+void (*a)(int, int, int, void *) = [](auto, auto, auto, auto) {};
diff --git a/gcc/testsuite/g++.dg/cpp1z/class-deduction66.C b/gcc/testsuite/g++.dg/cpp1z/class-deduction66.C
new file mode 100644
index 00000000000..3a5d8aa60a0
--- /dev/null
+++ b/gcc/testsuite/g++.dg/cpp1z/class-deduction66.C
@@ -0,0 +1,10 @@
+// PR c++/90173
+// { dg-do compile { target c++17 } }
+
+template <typename T> struct A { };
+
+A(int) -> A<int>;
+
+namespace decl {
+  A (*fp)() = 0;  // { dg-error "placeholder" }
+}
diff --git a/gcc/testsuite/gcc.dg/asan/pr87930.c b/gcc/testsuite/gcc.dg/asan/pr87930.c
index 4f8e6999fde..5a65d3fb030 100644
--- a/gcc/testsuite/gcc.dg/asan/pr87930.c
+++ b/gcc/testsuite/gcc.dg/asan/pr87930.c
@@ -1,4 +1,4 @@
-/* { dg-do compile { target { { i?86-*-* x86_64-*-* } && lp64 } } } */
+/* { dg-do compile { target { { i?86-*-linux* i?86-*-gnu* x86_64-*-linux* } && lp64 } } } */
 /* { dg-options "-fsanitize=address -mabi=ms" } */
 
 int i;
diff --git a/gcc/testsuite/gcc.dg/tsan/pr88017.c b/gcc/testsuite/gcc.dg/tsan/pr88017.c
index 82693a67e87..10df2818b0d 100644
--- a/gcc/testsuite/gcc.dg/tsan/pr88017.c
+++ b/gcc/testsuite/gcc.dg/tsan/pr88017.c
@@ -1,4 +1,4 @@
-/* { dg-do compile { target { { i?86-*-* x86_64-*-* } && lp64 } } } */
+/* { dg-do compile { target { { i?86-*-linux* i?86-*-gnu* x86_64-*-linux* } && lp64 } } } */
 /* { dg-options "-fsanitize=thread -mabi=ms" } */
 
 int i;
diff --git a/gcc/tree-ssa-pre.c b/gcc/tree-ssa-pre.c
index 7bb2cf1e220..e1c75f8e906 100644
--- a/gcc/tree-ssa-pre.c
+++ b/gcc/tree-ssa-pre.c
@@ -4197,6 +4197,7 @@ pass_pre::execute (function *fun)
   loop_optimizer_init (LOOPS_NORMAL);
   split_critical_edges ();
   scev_initialize ();
+  calculate_dominance_info (CDI_DOMINATORS);
 
   run_rpo_vn (VN_WALK);
 
diff --git a/libgcc/ChangeLog b/libgcc/ChangeLog
index c460b3f1add..2c850debbe4 100644
--- a/libgcc/ChangeLog
+++ b/libgcc/ChangeLog
@@ -1,3 +1,7 @@
+2019-05-04  Michael Meissner  <meissner@linux.ibm.com>
+
+	* ChangeLog.ibm: Delete unintentional commit on the wrong branch.
+
 2019-05-03  Release Manager
 
 	* GCC 9.1.0 released.
diff --git a/libgo/go/os/user/user_test.go b/libgo/go/os/user/user_test.go
index 2563077eb2e..eeb24dd0e00 100644
--- a/libgo/go/os/user/user_test.go
+++ b/libgo/go/os/user/user_test.go
@@ -129,6 +129,9 @@ func TestLookupGroup(t *testing.T) {
 
 func TestGroupIds(t *testing.T) {
 	checkGroup(t)
+	if runtime.GOOS == "aix" {
+		t.Skip("skipping GroupIds, see golang.org/issue/30563")
+	}
 	if runtime.GOOS == "solaris" {
 		t.Skip("skipping GroupIds, see golang.org/issue/14709")
 	}
